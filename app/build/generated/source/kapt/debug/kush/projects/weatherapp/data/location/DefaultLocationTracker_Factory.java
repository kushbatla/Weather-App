// Generated by Dagger (https://dagger.dev).
package kush.projects.weatherapp.data.location;

import android.app.Application;
import com.google.android.gms.location.FusedLocationProviderClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DefaultLocationTracker_Factory implements Factory<DefaultLocationTracker> {
  private final Provider<FusedLocationProviderClient> locationClientProvider;

  private final Provider<Application> applicationProvider;

  public DefaultLocationTracker_Factory(
      Provider<FusedLocationProviderClient> locationClientProvider,
      Provider<Application> applicationProvider) {
    this.locationClientProvider = locationClientProvider;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public DefaultLocationTracker get() {
    return newInstance(locationClientProvider.get(), applicationProvider.get());
  }

  public static DefaultLocationTracker_Factory create(
      Provider<FusedLocationProviderClient> locationClientProvider,
      Provider<Application> applicationProvider) {
    return new DefaultLocationTracker_Factory(locationClientProvider, applicationProvider);
  }

  public static DefaultLocationTracker newInstance(FusedLocationProviderClient locationClient,
      Application application) {
    return new DefaultLocationTracker(locationClient, application);
  }
}
