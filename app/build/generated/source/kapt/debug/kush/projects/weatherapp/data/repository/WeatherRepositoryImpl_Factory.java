// Generated by Dagger (https://dagger.dev).
package kush.projects.weatherapp.data.repository;

import android.app.Application;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import kush.projects.weatherapp.data.remote.WeatherAPI;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherRepositoryImpl_Factory implements Factory<WeatherRepositoryImpl> {
  private final Provider<WeatherAPI> apiProvider;

  private final Provider<Application> appProvider;

  public WeatherRepositoryImpl_Factory(Provider<WeatherAPI> apiProvider,
      Provider<Application> appProvider) {
    this.apiProvider = apiProvider;
    this.appProvider = appProvider;
  }

  @Override
  public WeatherRepositoryImpl get() {
    return newInstance(apiProvider.get(), appProvider.get());
  }

  public static WeatherRepositoryImpl_Factory create(Provider<WeatherAPI> apiProvider,
      Provider<Application> appProvider) {
    return new WeatherRepositoryImpl_Factory(apiProvider, appProvider);
  }

  public static WeatherRepositoryImpl newInstance(WeatherAPI api, Application app) {
    return new WeatherRepositoryImpl(api, app);
  }
}
